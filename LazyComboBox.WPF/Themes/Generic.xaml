<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:uTILLIty.Controls.WPF.LazyComboBox"
	xmlns:system="clr-namespace:System;assembly=mscorlib">

	<!-- Resources to overwrite BEGIN -->
	<!-- ReSharper disable InconsistentNaming -->
	<LinearGradientBrush x:Key="LCB.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFF0F0F0" Offset="0.0" />
		<GradientStop Color="#FFE5E5E5" Offset="1.0" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="LCB.Foreground" Color="{x:Static SystemColors.ControlTextColor}" />
	<SolidColorBrush x:Key="LCB.Border" Color="{x:Static SystemColors.ActiveBorderColor}" />
	<Thickness x:Key="LCB.BorderThickness">1,1,1,1</Thickness>
	<CornerRadius x:Key="LCB.CornerRadius">0</CornerRadius>

	<SolidColorBrush x:Key="LCB.Editable.Background" Color="{x:Static SystemColors.WindowColor}" />
	<SolidColorBrush x:Key="LCB.Editable.Border" Color="#FF569DE5" />

	<SolidColorBrush x:Key="LCB.MouseOver.Border" Color="#FF7EB4EA" />

	<system:Double x:Key="LCB.ProgressBar.Width">50</system:Double>

	<SolidColorBrush x:Key="LCB.DropDown.Border"
	                 Color="{x:Static SystemColors.ActiveBorderColor}" />
	<SolidColorBrush x:Key="LCB.DropDown.Background" Color="{x:Static SystemColors.ControlColor}" />
	<SolidColorBrush x:Key="LCB.DropDown.Foreground" Color="{x:Static SystemColors.ControlTextColor}" />
	<Thickness x:Key="LCB.DropDown.BorderThickness" Bottom="1" />

	<SolidColorBrush x:Key="LCB.Button.Background" Color="Transparent" />
	<SolidColorBrush x:Key="LCB.Button.Border" Color="Transparent" />
	<SolidColorBrush x:Key="LCB.Button.Glyph" Color="#FF606060" />
	<Thickness x:Key="LCB.Button.Glyph.Margin">5</Thickness>
	<system:Double x:Key="LCB.Button.Glyph.Height">7</system:Double>
	<system:Double x:Key="LCB.Button.Glyph.Width">10</system:Double>
	<system:Double x:Key="LCB.Button.Glyph.Thickness">2</system:Double>
	<LinearGradientBrush x:Key="LCB.Button.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFEBF4FC" Offset="0.0" />
		<GradientStop Color="#FFDCECFC" Offset="1.0" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="LCB.Button.MouseOver.Border" Color="#FF7EB4EA" />
	<SolidColorBrush x:Key="LCB.Button.MouseOver.Glyph" Color="#FF000000" />
	<!-- ReSharper restore InconsistentNaming -->
	<!-- Resources to overwrite END -->

	<Style TargetType="{x:Type controls:LazyComboBox}">
		<Setter Property="Foreground" Value="{DynamicResource LCB.Foreground}" />
		<Setter Property="Background" Value="{DynamicResource LCB.Background}" />
		<Setter Property="BorderBrush" Value="{DynamicResource LCB.Border}" />
		<Setter Property="BorderThickness" Value="{DynamicResource LCB.BorderThickness}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="ListStyle">
			<Setter.Value>
				<Style TargetType="{x:Type ListView}">
					<Setter Property="ItemsPanel">
						<Setter.Value>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel Orientation="Vertical" IsVirtualizing="True" CanHorizontallyScroll="False"
								                        CanVerticallyScroll="True" />
							</ItemsPanelTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="PopupBorderStyle">
			<Setter.Value>
				<Style TargetType="{x:Type Border}">
					<Setter Property="BorderBrush" Value="{DynamicResource LCB.DropDown.Border}" />
					<Setter Property="BorderThickness" Value="{DynamicResource LCB.DropDown.BorderThickness}" />
					<Setter Property="Background" Value="{DynamicResource LCB.DropDown.Background}" />
					<Setter Property="TextBlock.Foreground" Value="{DynamicResource LCB.DropDown.Foreground}" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="TextBoxStyle">
			<Setter.Value>
				<Style TargetType="{x:Type TextBox}">
					<Setter Property="BorderThickness" Value="0" />
					<Setter Property="Padding" Value="0,2" />
					<Setter Property="Background" Value="{DynamicResource LCB.Editable.Background}" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="DropDownButtonStyle">
			<Setter.Value>
				<Style TargetType="{x:Type ToggleButton}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ToggleButton}">
								<Border x:Name="Border" Background="{DynamicResource LCB.Button.Background}"
								        BorderThickness="1" Margin="0" Padding="0" CornerRadius="{DynamicResource LCB.CornerRadius}"
								        BorderBrush="{DynamicResource LCB.Button.Border}">
									<Path HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="{x:Null}"
									      Data="M0.5,0.5 L3,6.5 5.5,0.5" Stroke="{DynamicResource LCB.Button.Glyph}"
									      Margin="{DynamicResource LCB.Button.Glyph.Margin}"
									      Height="{DynamicResource LCB.Button.Glyph.Height}"
									      Width="{DynamicResource LCB.Button.Glyph.Width}"
									      StrokeThickness="{DynamicResource LCB.Button.Glyph.Thickness}"
									      Stretch="Fill" />
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter TargetName="Arrow" Property="Stroke" Value="{DynamicResource LCB.Button.MouseOver.Glyph}" />
										<Setter TargetName="Border" Property="Background" Value="{DynamicResource LCB.Button.MouseOver.Background}" />
										<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource LCB.Button.MouseOver.Border}" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Focusable" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:LazyComboBox}">
					<Border x:Name="MainBorder" CornerRadius="{DynamicResource LCB.CornerRadius}"
					        Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Border x:Name="PART_SelectedItemColumn" Background="Transparent" Padding="2">
								<TextBlock Text="{TemplateBinding SelectedItemText}" />
							</Border>
							<ProgressBar x:Name="ProgressBar" Grid.Column="1" Visibility="Collapsed"
							             Width="{DynamicResource LCB.ProgressBar.Width}"
							             Orientation="Horizontal" IsIndeterminate="{TemplateBinding ListUpdating}" />
							<ToggleButton x:Name="PART_DropDownButton" Grid.Column="2" Focusable="false" ClickMode="Press"
							              Margin="0,-1,-1,-1"
							              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
							              Style="{TemplateBinding DropDownButtonStyle}" />
							<!--<Border x:Name="PART_DropDownButton" Grid.Column="1" Background="Transparent"
							        Style="{TemplateBinding DropDownButtonStyle}" IsHitTestVisible="True"
							        Width="{TemplateBinding DropDownButtonWidth}">
								<ContentPresenter Style="{TemplateBinding DropDownButtonContentStyle}" />
							</Border>-->
							<TextBox x:Name="PART_TextBox" Grid.Column="0" Visibility="Hidden"
							         Style="{TemplateBinding TextBoxStyle}"
							         Text="{Binding Text, Delay=200, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
							<Popup x:Name="PART_Popup" Grid.Column="0" Grid.ColumnSpan="2" Focusable="True"
							       MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
							       Placement="Bottom" MinHeight="60" MaxHeight="200" StaysOpen="True"
							       IsOpen="{TemplateBinding IsDropDownOpen}">
								<Border Style="{TemplateBinding PopupBorderStyle}" CornerRadius="{DynamicResource LCB.CornerRadius}">
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition Height="*" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<!-- IsSynchronizedWithCurrentItem="True" - always causes first item in list to be selected -->
										<ListView x:Name="PART_ListView" MaxHeight="200"
										          Style="{TemplateBinding ListStyle}"
										          ItemsSource="{TemplateBinding ItemsSource}"
										          IsSynchronizedWithCurrentItem="True"
										          SelectionMode="Single" />
										<ContentPresenter Grid.Row="1" Visibility="{TemplateBinding MoreDataAvailableContentVisibility}"
										                  Content="{TemplateBinding MoreDataAvailableContent}" />
									</Grid>
								</Border>
							</Popup>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEditable" Value="True">
							<Setter Property="Cursor" TargetName="PART_SelectedItemColumn" Value="IBeam" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource LCB.MouseOver.Border}" />
						</Trigger>
						<Trigger Property="ListUpdating" Value="True">
							<Setter TargetName="ProgressBar" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="PART_DropDownButton" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsEditing" Value="True">
							<Setter TargetName="PART_TextBox" Property="Visibility" Value="Visible" />
							<Setter TargetName="PART_SelectedItemColumn" Property="Visibility" Value="Hidden" />
							<Setter TargetName="MainBorder" Property="BorderBrush"
							        Value="{DynamicResource LCB.Editable.Border}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>